apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "upf.fullname" . }}
  labels:
    {{- include "upf.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook-weight": "-5"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "upf.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "upf.selectorLabels" . | nindent 8 }}
      annotations:
        cni.projectcalico.org/ipAddrs: "[\"{{ .Values.pfcp.addr }}\"]"
{{- if .Values.global.enableMininet }}
        k8s.v1.cni.cncf.io/networks: upf-bridge-conf
{{- end }}
    spec:
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/bash"]
          args: ["-c", "{{ include "upf.setup" . }} && /usr/src/free5gc-stage-1/free5gc-upfd"]
          stdin: true
          tty: true
          volumeMounts:
            - name: free5gc-config
              mountPath: /usr/src/free5gc-stage-1/install/etc/free5gc/free5gc.conf
              subPath: free5gc.conf
            - name: tun-device
              mountPath: /dev/net/tun
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: free5gc-config
          configMap: 
            name: free5gc-configmap
        - name: tun-device
          hostPath:
            path: /dev/net/tun
            type: File
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
